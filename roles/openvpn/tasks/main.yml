- name: Create openvpn directory
  file:
    path: ~/openvpn
    state: directory
- name: Install expect
  become: yes
  apt:
    name: expect
    update_cache: yes
- name: Copy docker-compose.yml
  template:
    src: docker-compose.yml.j2
    dest: ~/openvpn/docker-compose.yml
- name: Create openvpn Docker network
  docker_network:
    name: openvpn
    ipam_config:
      - subnet: 172.21.0.0/16
- name: Copy configuration script
  template:
    src: configure-vpn.sh.j2
    dest: ~/openvpn/configure-vpn.sh
    mode: 0744
  register: configuration_script
- name: Copy parameters file
  template:
    src: script-configure.exp.j2
    dest: ~/openvpn/script-configure.exp
    mode: 0744
  when: configuration_script.changed
- name: Configure OpenVPN
  command: ~/openvpn/script-configure.exp
  when: configuration_script.changed
- name: Copy client certificate script
  template:
    src: client-certificate.sh.j2
    dest: ~/openvpn/client-certificate.sh
    mode: 0744
- name: Copy parameter file
  template:
    src: script-client.exp.j2
    dest: ~/openvpn/script-client.exp
    mode: 0744
- name: Generate client certificate
  command: ~/openvpn/script-client.exp {{ item.name }} {{ item.passphrase }}
  args:
    creates: ~/openvpn/{{ item.name }}.ovpn
  loop: "{{ vpn_client_certificates }}"
- name: Configure fallback VPN using TCP on port 80
  lineinfile:
    path: ~/openvpn/{{ item.name }}.ovpn
    insertafter: '^remote {{ hostname }} 1194 udp'
    regexp: '^remote {{ hostname }} 80 tcp'
    line: 'remote {{ hostname }} 80 tcp'
  loop: "{{ vpn_client_certificates }}"
- name: Copy OPT URLs generator script
  template:
    src: generate-otp-url.sh.j2
    dest: ~/openvpn/generate-otp-url.sh
    mode: 0744
- name: Generate google authenticator URLs
  become: yes
  command: /home/{{ ansible_user }}/openvpn/generate-otp-url.sh
- name: Fetch client certificates
  fetch:
    src: ~/openvpn/{{ item.name }}.ovpn
    dest: "{{ inventory_dir }}/"
    flat: yes
  loop: "{{ vpn_client_certificates }}"
- name: Fetch OTP URLs file
  become: true
  fetch:
    src: /home/{{ ansible_user }}/openvpn/otp-urls.md
    dest: "{{ inventory_dir }}/"
    flat: yes
- name: Remove OTP URLs file
  become: true
  file:
    path: /home/{{ ansible_user }}/openvpn/otp-urls.md
    state: absent
- name: Fetch client google_authenticator files
  become: true
  fetch:
    src: /home/{{ ansible_user }}/openvpn/openvpn-data/conf/otp/{{ item.name }}.google_authenticator
    dest: "{{ inventory_dir }}/"
    flat: yes
  loop: "{{ vpn_client_certificates }}"
- name: Remove parameters files
  file:
    path: ~/openvpn/{{ item }}.exp
    state: absent
  loop:
    - script-configure
    - script-client
- name: Run OpenVPN Docker containers
  docker_compose:
    project_src: ~/openvpn/
- name: Configure weekly updates on Monday at 05:30
  cron:
    name: Update openvpn Docker containers
    minute: "30"
    hour: "5"
    weekday: "1"
    job: "/usr/local/bin/docker-compose -f /home/{{ ansible_user }}/openvpn/docker-compose.yml pull && /usr/local/bin/docker-compose -f /home/{{ ansible_user }}/openvpn/docker-compose.yml up -d --build --force-recreate"
  when: auto_update is defined and auto_update == true
- name: Disable weekly updates on Monday at 05:30
  cron:
    name: Update openvpn Docker containers
    state: absent
  when: auto_update is not defined or auto_update == false

