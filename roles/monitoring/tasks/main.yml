- name: Create monitoring directories
  become: yes
  file:
    path: '{{item}}'
    state: directory
  loop:
    - /var/www
    - /var/www/monitoring
    - /var/www/monitoring/smtp
    - /var/www/monitoring/prometheus
    - /var/www/monitoring/loki
    - /var/www/monitoring/promtail
    - /var/www/monitoring/grafana
    - /var/www/monitoring/grafana/provisioning
    - /var/www/monitoring/grafana/provisioning/datasources
    - /var/www/monitoring/grafana/provisioning/dashboards
    - /var/www/monitoring/grafana/provisioning/dashboards/json
    - /var/www/monitoring/grafana/provisioning/dashboards/json/docker-alerts
    - /var/www/monitoring/grafana/provisioning/alerting
- name: Check for local hubbed_hosts file
  local_action: stat path="{{playbook_dir}}/hosts/{{hostname}}/hubbed_hosts"
  register: hubbed_hosts_file
- name: Configure hubbed_hosts
  become: yes
  copy:
    src: '{{playbook_dir}}/hosts/{{hostname}}/hubbed_hosts'
    dest: /var/www/monitoring/smtp/hubbed_hosts
  when: enable_dkim is defined and enable_dkim == true and hubbed_hosts_file.stat.exists
- name: Generate dkim keys
  become: yes
  command: opendkim-genkey -D /var/www/monitoring/smtp/ -d {{ hostname }} -s {{ grafana_subdomain }}
  args:
    creates: /var/www/monitoring/smtp/{{ grafana_subdomain }}.private
  when: enable_dkim is defined and enable_dkim == true
- name: Set private key permissions
  become: yes
  file:
    path: /var/www/monitoring/smtp/{{ grafana_subdomain }}.private
    mode: '644'
  when: enable_dkim is defined and enable_dkim == true
- name: Fetch DKIM public key
  become: true
  fetch:
    src: /var/www/monitoring/smtp/{{ grafana_subdomain }}.txt
    dest: "{{ inventory_dir }}/{{ grafana_subdomain }}._domainkey.txt"
    flat: yes
  when: enable_dkim is defined and enable_dkim == true
- name: Configure dkim
  become: yes
  template:
    src: dkim-config.j2
    dest: /var/www/monitoring/smtp/dkim-config
  when: enable_dkim is defined and enable_dkim == true
- name: Configure monitoring Docker compose.yml
  become: yes
  template:
    src: compose.yml.j2
    dest: /var/www/monitoring/compose.yml
- name: Configure prometheus.yml
  become: yes
  copy:
    src: prometheus.yml
    dest: /var/www/monitoring/prometheus/prometheus.yml
- name: Configure loki-config.yaml
  become: yes
  get_url:
    url: https://raw.githubusercontent.com/grafana/loki/v{{ loki_version }}/cmd/loki/loki-local-config.yaml
    dest: /var/www/monitoring/loki/loki-config.yaml
- name: Configure promtail-config.yaml
  become: yes
  get_url:
    url: https://raw.githubusercontent.com/grafana/loki/v{{ loki_version }}/clients/cmd/promtail/promtail-docker-config.yaml
    dest: /var/www/monitoring/promtail/promtail-config.yaml
- name: Provision default Grafana datasources and dashboards provider
  become: yes
  copy:
    src: '{{item}}.yml'
    dest: /var/www/monitoring/grafana/provisioning/{{item}}/{{item}}.yaml
  loop:
    - datasources
    - dashboards
- name: Provision default Grafana dashboards
  become: yes
  copy:
    src: 'dashboards/{{item}}.json'
    dest: /var/www/monitoring/grafana/provisioning/dashboards/json/{{item}}.json
  loop:
    - docker_monitoring
    - docker_node_exporter
- name: Provision default Grafana alert dashboards
  become: yes
  copy:
    src: 'dashboards/{{item}}.json'
    dest: /var/www/monitoring/grafana/provisioning/dashboards/json/docker-alerts/{{item}}.json
  loop:
    - docker_alerts
- name: Provision default Grafana contact points
  become: yes
  template:
    src: '{{item}}.yml.j2'
    dest: /var/www/monitoring/grafana/provisioning/alerting/{{item}}.yaml
  loop:
    - contact_points
- name: Provision default Grafana alerts
  become: yes
  copy:
    src: 'alerts/{{item}}.yml'
    dest: /var/www/monitoring/grafana/provisioning/alerting/{{item}}.yaml
  loop:
    - caddy_docker
    - monitoring_docker
- name: Create monitoring Docker network
  community.docker.docker_network:
    name: monitoring
    ipam_config:
      - subnet: 172.19.0.0/16
- name: Install Loki Docker driver
  community.docker.docker_plugin:
    plugin_name: grafana/loki-docker-driver:{{ loki_version }}
    alias: loki
    state: enable
- name: Copy loki log driver default config file
  become: yes
  template:
    src: daemon.json.j2
    dest: /etc/docker/daemon.json
  notify: restart docker
- meta: flush_handlers
- name: Run monitoring Docker containers
  community.docker.docker_compose_v2:
    project_src: /var/www/monitoring
    pull: always
    build: always
  notify: recreate caddy docker container
- meta: flush_handlers
- name: Update Caddyfile
  become: yes
  template:
    src: Caddyfile.j2
    dest: /var/www/caddy/sites-enabled/{{ grafana_subdomain }}.{{ hostname }}
  notify: reload caddy config
- meta: flush_handlers
