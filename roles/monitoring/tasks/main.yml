- name: Create monitoring directories
  become: yes
  file:
    path: '{{item}}'
    state: directory
  loop:
    - /var/www
    - /var/www/monitoring
    - /var/www/monitoring/prometheus
    - /var/www/monitoring/grafana
    - /var/www/monitoring/grafana/provisioning
    - /var/www/monitoring/grafana/provisioning/datasources
    - /var/www/monitoring/grafana/provisioning/dashboards
    - /var/www/monitoring/grafana/provisioning/dashboards/json
    - /var/www/monitoring/grafana/provisioning/notifiers
- name: Configure monitoring docker-compose.yml
  become: yes
  template:
    src: docker-compose.yml.j2
    dest: /var/www/monitoring/docker-compose.yml
- name: Configure prometheus.yml
  become: yes
  template:
    src: prometheus.yml.j2
    dest: /var/www/monitoring/prometheus/prometheus.yml
- name: Provision default Grafana datasources, dashboards provider and notifiers
  become: yes
  template:
    src: '{{item}}.yml.j2'
    dest: /var/www/monitoring/grafana/provisioning/{{item}}/{{item}}.yaml
  loop:
    - datasources
    - dashboards
    - notifiers
- name: Provision default Grafana dashboards
  become: yes
  copy:
    src: '{{item}}.json'
    dest: /var/www/monitoring/grafana/provisioning/dashboards/json/{{item}}.json
  loop:
    - docker-monitoring
    - docker-alerts
- name: Create monitoring Docker network
  docker_network:
    name: monitoring
    ipam_config:
      - subnet: 172.19.0.0/16
- name: Check if Loki Docker driver has been installed
  shell: "docker plugin ls --format '{''{.Name}''}' | grep loki || true"
  register: loki_docker_driver
- name: Install Loki Docker driver
  command: docker plugin install grafana/loki-docker-driver:latest --alias loki --grant-all-permissions
  when: loki_docker_driver.stdout != "loki:latest"
- name: Copy loki log driver default config file
  become: yes
  template:
    src: daemon.json.j2
    dest: /etc/docker/daemon.json
  notify: restart docker
- name: Run monitoring Docker containers
  docker_compose:
    project_src: /var/www/monitoring/
- name: Configure weekly updates on Monday at 05:00
  cron:
    name: Update montoring Docker containers
    minute: "0"
    hour: "5"
    weekday: "1"
    job: "/usr/local/bin/docker-compose -f /var/www/monitoring/docker-compose.yml pull && /usr/local/bin/docker-compose -f /var/www/monitoring/docker-compose.yml up -d --build"
