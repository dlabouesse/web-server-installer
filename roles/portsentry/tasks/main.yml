- name: Install portsentry
  become: yes
  apt:
    name:
      - portsentry
    update_cache: yes
- name: Configure to block TCP and UDP scans
  become: yes
  lineinfile:
    path: /etc/portsentry/portsentry.conf
    regex: '^{{ item }}="\d"$'
    line: '{{ item }}="1"'
  loop:
    - BLOCK_TCP
    - BLOCK_UDP
  notify: restart portsentry
- name: Configure KILL_ROUTE to stop port scanning
  become: yes
  lineinfile:
    path: /etc/portsentry/portsentry.conf
    regex: '^#?KILL_ROUTE="\/sbin\/route\sadd\s-host\s\$TARGET\$\sreject"$'
    line: 'KILL_ROUTE="/sbin/route add -host $TARGET$ reject"'
  notify: restart portsentry
- name: Configure KILL_RUN_CMD to ban scanner IP
  become: yes
  lineinfile:
    path: /etc/portsentry/portsentry.conf
    regex: '^#?KILL_RUN_CMD='
    line: KILL_RUN_CMD="/sbin/iptables -I INPUT -s $TARGET$ -j DROP && echo '$TARGET$' >> {{ blacklist_path }}/{{ blacklist_file }} && echo '$TARGET$ has been banned for port scanning.' >> {{ log_file }}
  notify: restart portsentry
- name: Configure ports 80 and 443 to be ignored
  become: yes
  lineinfile:
    path: /etc/portsentry/portsentry.conf
    regex: '^ADVANCED_EXCLUDE_TCP='
    line: ADVANCED_EXCLUDE_TCP="80,113,139,443"
  notify: restart portsentry
- name: Configure TCP and UDP to advanced mode
  become: yes
  lineinfile:
    path: /etc/default/portsentry
    regex: '^{{ item.mode }}='
    line: '{{ item.mode }}="{{ item.value }}"'
  loop:
    - { mode: 'TCP_MODE', value: 'atcp' }
    - { mode: 'UDP_MODE', value: 'audp' }
  notify: restart portsentry
- name: Configure crontab to ban persisted IPs on reboot
  become: yes
  cron:
    name: Ban PortSentry persisted IPs
    special_time: reboot
    job: cat {{ blacklist_path }}/{{ blacklist_file }} | while read IP; do iptables -I INPUT -s $IP -j DROP; done
